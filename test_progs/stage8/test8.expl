class
A  // fact
{
    decl
        int i;
        int f0(int n);
        int f1(int n);
    enddecl
    int f0(int n) {
        decl
            int c;
        enddecl
        begin
            c = self.f1(n);
            write(self.i);
        end
            return c;
    }
    int f1(int n) {
        decl
            int res;
        enddecl
        begin
            if(n == 1) then
                self.i=10;
                res = 1;
            else
                res = n * self.f1(n - 1);
            endif;
        end
            return res;
    }
}
B extends A // fib
{
    decl
        int f1(int n);
    enddecl
    int f1(int n) {
        decl
            int res;
        enddecl
        begin
            if(n == 0 || n == 1) then
                res = n;
                self.i=20;
            else
                res = self.f1(n - 1) + self.f1(n - 2);
            endif;
        end
            return res;
    }
}
endclass

decl
    int foo(A* obj);
enddecl

int foo(A* obj) {
    begin
        *obj = new(B);  // fib
    end
    return 1;
}

int main() {
    decl
        int n, opt;
        A obj;
    enddecl
    begin
        initialize();
        //read(n);
        opt = exposcall("Read", -1, n);
        obj = new(A);  // fact
        //write(obj.f0(n));
        opt = exposcall("Write", -2, obj.f0(n));
        delete(obj);
        opt = foo(&obj);
        //write(obj.f0(n));
        opt = exposcall("Write", -2, obj.f0(n));
    end
        return 1;
}

