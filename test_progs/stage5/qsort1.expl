decl
  int a,b,n,arr[10];
  int swap(int index, int newindex);
  int swap_ptr(int *a, int *b);
  int readarr(int temp);
  int writearr(int temp);
  int partition (int low,  int high);
  int quicksort(int low,int mid,int high);
enddecl

int swap_ptr(int *a, int *b)
{
  decl
    int s;
  enddecl

  begin
    s = *a;
    *a = *b;
    *b = s;

  end
    return 0;
}

int swap(int index ,int newindex)
{
  decl
    int s;
  enddecl

  begin
    s = arr[index];
    arr[index] = arr[newindex];
    arr[newindex] = s;

  end
    return s;
}

int readarr(int temp)
{
  decl
    int count;
  enddecl

  begin
    count=0;

    while(count < temp) do
      read(arr[count]);
      count=count+1;
    endwhile;

  end
    return count;
}

int writearr(int temp)
{
  decl
    int count;
  enddecl

  begin
    count = 0;

    while(count < temp) do
      write(arr[count]);
      count = count+1;
    endwhile;

  end
    return count;
}

int partition (int low, int high)
{
  decl
    int pivot,t;
    int i,j;
  enddecl

  begin
    pivot = arr[high];
    j = low;
    i = low;

    while(i < high) do
      if (arr[i] <= pivot) then
      t = swap_ptr (&arr[i] , &arr[j]);
      j = j+1;
      endif;
      i=i+1;
    endwhile;

    i = swap_ptr (&arr[j] , &arr[high]);

  end
    return j;
}



int quicksort (int low , int mid, int high)
{
  decl
    int pp,temp,t;
  enddecl

  begin

    if (low < high) then
      pp = partition (low , high);
      temp = quicksort(pp+1, quicksort(low, 0, pp-1), high);
    endif;

  end
    return 1;
}

int main()
{
  decl
    int junk;
    int temp;
  enddecl

  begin

    read(n);
    junk = readarr(n);
    temp = quicksort(0,0,n-1);
    write("Sorted:");
    junk = writearr(n);

  end
    return junk;
}

